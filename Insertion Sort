#include<iostream>
#include<string>
#include<chrono>
#include<thread>
#include<atomic>
#include<cmath>
#include<vector>
#include<map>
#include<algorithm>
#include <ctime>
using namespace std;

int arr[10];
int size_arr = sizeof(arr)/sizeof(arr[0]);
int key, filled = 0, num, status, option;

void show_array();
int insertion_sort();
void array_clean();

int main(){

cout<<"Welcome to Insertion Sort\n";

while(true){

cout<<"1. Sort\n";
cout<<"2. Quit\n";
cout<<"Enter 1 or 2: ";
cin>>option;
cout<<endl;

if(cin.fail()){
    cin.clear();
    cin.ignore(1000, '\n');
    cout<<"Data types invalid\n";
    continue;
}

if(option == 2){
    cout<<"Thank You\n";
    return 0;
}

else if(option == 1){

filled = 0;
for(int x = 0; x<size_arr; ){
    cout<<"Enter number to sort: ";
    cin>>num;
    
    if(num == 0){
    break;
    }
    
    while(cin.fail()||num<0){
        cin.clear();
        cin.ignore(1000, '\n');
        cout<<"Invalid data types\n";
        cout<<"Enter number to sort: ";
        cin>>num;
        continue;
        }
    
    arr[x] = num;
    filled++;
    x++;
    
    if(filled == size_arr){
        cout<<"Array is fulled\n";
    }
}

cout<<"Number: ";
show_array();
cout<<endl;

status = insertion_sort();
if(status == 1){
    cout<<"New Number(sorted): ";
    show_array();
    array_clean();
}
}

else{
    cout<<"Invalid\n";
}
}
return 0;
}

void show_array(){
    for(int i = 0; i < filled; i++){
        cout<<arr[i];
        if(i != filled - 1){
            cout<<", ";
        }
    }
    cout<<endl;
}

int insertion_sort(){
    int j;
    for(int i = 1; i<filled; i++){
        key = arr[i];
        j = i-1;
        
        while(j>=0 && arr[j] > key){
            arr[j+1] = arr[j];
            j--;
        }       
        arr[j+1] = key;     
        }
        return 1;
    }

void array_clean(){
    for(int i = 0; i<size_arr; i++){
        arr[i] = 0;
    }
    filled = 0;
}
